---
- name: Start clasters VM
  hosts: hypervisors
  become: yes
  gather_facts: no
#  vars:
#    current_vm_name: master0
  tasks:
    - name: set some facts that describe the vm
      set_fact:
#        current_vm_hostname: "{{ vms[current_vm_name].hostname }}"
#        current_vm_mac: "{{ vms[current_vm_name].mac }}"
#        current_vm_ipaddr: "{{ vms[current_vm_name].ipaddr }}"
#        current_vm_netmask: "{{ vms[current_vm_name].netmask | default(vms.global.netmask) }}"
#        current_vm_dns: "{{ vms[current_vm_name].dns | default(vms.global.dns) }}"
#        current_vm_gw: "{{ vms[current_vm_name].gw | default(vms.global.gw) }}"
#        current_vm_tz: "{{ vms[current_vm_name].tz | default(vms.global.tz) }}"
#        current_vm_mem_gb: "{{ vms[current_vm_name].mem_gb | default(vms.global.mem_gb) }}"
#        current_vm_ncpus: "{{ vms[current_vm_name].ncpus | default(vms.global.ncpus) }}"
        
        clustervms: "{{ groups['ocp_masters'] }}"
#    - debug:
#        var: clustervms
#    - debug:
#        msg: "{{ item }}"
#      loop: "{{ clustervms | list }}"
 
         

    - name: do the final boot (or at least make sure it's up)
      virt:
        name: "{{ item.split('.')[0] }}"
        state: running
#      when: vmstate[item].state != 'running'
      loop: "{{ clustervms | list }}"

    - name: Pause for 5 minutes.
      pause:
        minutes: 5
    - name: wait for vm to finish booting
      delegate_to: localhost
      become: no
      shell:
        cmd:  'KUBECONFIG=/home/student/ocp4-lab-deployment/cluster/auth/kubeconfig ; oc whoami'
      ignore_errors: true
      register: cmd_res
      retries: 20
      delay: 30
      until: '"system.admin" not in cmd_res.stdout_lines'  


    - name: report all is well and the world continues
      debug:
        msg: |
          The cluster's VMs restarting process is complete. You may now move on
          to provision the services on it.
...
